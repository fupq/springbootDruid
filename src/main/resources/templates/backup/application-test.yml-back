server:
  port: 8108
#  address: 10.35.90.24
#  host: http://10.35.50.197:9093/wuzhu
##日志配置
logging:
  config: classpath:logback-prod.xml


#spring相关配置
spring:
  #数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    write:
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://10.20.10.145:3306/wuzhu?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: wuzhu
      password: 1qaz@WSX

    read:
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://10.20.10.145:3306/wuzhu?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: wuzhu
      password: 1qaz@WSX
      
    #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 5
    #最大连接池数量
    maxActive: 80
    #最小连接池数量
    minIdle: 5
    #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    maxWait: 60000
    #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    poolPreparedStatements: false
    #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxOpenPreparedStatements: 0
    #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    validationQuery: SELECT 1 FROM DUAL
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    #有两个含义： 1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #物理连接初始化的时候执行的sql
    #connectionInitSqls
    #当数据库抛出一些不可恢复的异常时，抛弃连接
    #exceptionSorter:
    #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    #类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
    #proxyFilters:
    
